name: Release lebai sdk
on:
  push:
    branches:
      - master

jobs:
  linux-cpp-x64:
    uses: ./.github/workflows/linux_cpp_release.yml
  linux-python-x64:
    uses: ./.github/workflows/linux_python_release.yml
    secrets: inherit
  linux-dotnet-x64:
    uses: ./.github/workflows/linux_dotnet_release.yml
    secrets: inherit
  win-cpp-x64:
    uses: ./.github/workflows/windows_cpp_release.yml
  win-python-x64:
    uses: ./.github/workflows/windows_python_release.yml
    secrets: inherit
  win-dotnet-x64:
    uses: ./.github/workflows/windows_dotnet_release.yml
    secrets: inherit    
  release:
    needs: 
      - linux-cpp-x64
      - linux-python-x64
      - linux-dotnet-x64
      - win-cpp-x64
      - win-python-x64
      - win-dotnet-x64
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write

    steps:
      - name: Checkout
        uses: actions/checkout@v4    
      - uses: actions/download-artifact@v4
        with:
          name: 
            - lebai-linux-x64-deb
            - lebai-linux-x64-nupkg
            - lebai-linux-x64-whl
            - lebai-win-x64-exe
            - lebai-win-x64-nupkg
            - lebai-win-x64-38-whl
            - lebai-win-x64-39-whl
            - lebai-win-x64-310-whl
            - lebai-win-x64-311-whl
      - name: Display structure of downloaded files
        run: ls -l
      - name: Extract Project Version
        id: extract_version
        run: |
          # Extract the project version from CMakeLists.txt
          version=$(awk '/project\s*\(/,/)/' CMakeLists.txt | grep -Po 'VERSION\s*\K[0-9]+\.[0-9]+\.[0-9]+')
          echo "version_tag=v$version" >> $GITHUB_ENV        
      - name: Create release
        id: create_release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ steps.extract_version.outputs.version_tag }}
          allowUpdates: true
          artifacts: |
            *.exe,
            *.deb,
            *.nupkg,
            *.whl
            
