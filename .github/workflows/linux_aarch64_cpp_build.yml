name: Linux aarch64 cpp build
run-name: ${{ github.actor }} Linux cpp build
on: 
  workflow_dispatch: 
  pull_request: 
  push:
    branches: master
jobs: 
  linux_cpp_build: 
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    steps: 
      - name: Checkout
        uses: actions/checkout@v3

      - uses: uraimo/run-on-arch-action@v2
        name: Build artifact
        id: build
        with:
          arch: aarch64
          distro: ubuntu_latest

          # Not required, but speeds up builds
          githubToken: ${{ github.token }}

          # Create an artifacts directory
          setup: |
            mkdir -p "${PWD}/artifacts"

          # Mount the artifacts directory as /artifacts in the container
          dockerRunArgs: |
            --volume "${PWD}:/root"

          # The shell to run commands with in the container
          shell: /bin/sh

          # Install some dependencies in the container. This speeds up builds if
          # you are also using githubToken. Any dependencies installed here will
          # be part of the container image that gets cached, so subsequent
          # builds don't have to re-install them. The image layer is cached
          # publicly in your project's package repository, so it is vital that
          # no secrets are present in the container state or logs.
          install: |
            apt-get update -y
            apt-get install -y build-essential doxygen graphviz python3-pip python3-dev
            pip3 install -r requirements.txt

          # Produce a binary artifact and place it in the mounted volume
          run: |
            cmake -S. -Bbuild -DBUILD_DEB=ON
            cmake --build build
